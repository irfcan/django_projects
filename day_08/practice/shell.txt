Microsoft Windows [Version 10.0.19045.4291]
(c) Microsoft Corporation. Tüm hakları saklıdır.

C:\Users\Techpro\Desktop\Django\day_08\practice>env\Scripts\activate

(env) C:\Users\Techpro\Desktop\Django\day_08\practice>py manage.py shell
Python 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from gazeteapp.models import Author, Makale
>>> makale = Makale.objects.all()
>>> makale
<QuerySet [<Makale: Djangonun Sırları>, <Makale: Bir Bootcamp'e Nasıl Çalışılmaz>, <Makale: MAC Dünyasında Python>]>
>>> author = Author.objects.all()
>>> author
<QuerySet [<Author: Fatih Bey>, <Author: Ebru Okur>, <Author: Ali Dağ>]>
>>> makale1 = Makale(title="Django Günlükleri", author="Hasan Hüseyin Kesekağıdı", content="Django öğrenmesi zevkli bir framework") 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\base.py", line 543, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 284, in __set__
    raise ValueError(
ValueError: Cannot assign "'Hasan Hüseyin Kesekağıdı'": "Makale.author" must be a "Author" instance.
>>> author = Author(name="Hasan Hüseyin Keskağıdı")
>>> author.save()
>>> makale1 = Makale(title="Django Günlükleri", author=author, content="Django öğrenmesi zevkli bir framework")                     
>>> makale1.save()
>>> makale = Makale.objects.all()
>>> makale
<QuerySet [<Makale: Djangonun Sırları>, <Makale: Bir Bootcamp'e Nasıl Çalışılmaz>, <Makale: MAC Dünyasında Python>, <Makale: Django Günlükleri>]>
>>> author = Author.objects.all()
>>> author
<QuerySet [<Author: Fatih Bey>, <Author: Ebru Okur>, <Author: Ali Dağ>, <Author: Hasan Hüseyin Kesekağıdı>]>
>>> author1 = Author.objects.filter(name="Ebru Okur")
>>> author1
<QuerySet [<Author: Ebru Okur>]>
>>> makale2 = Makale.objects.create(title="Djangoda E Ticaret Sitesi", author=author1, content="Djangoda E ticaret sitesi yapmak aşırı kolay.", isHome=True)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\base.py", line 543, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 284, in __set__
    raise ValueError(
ValueError: Cannot assign "<QuerySet [<Author: Ebru Okur>]>": "Makale.author" must be a "Author" instance.
>>> author1 = Author.objects.filter(name="Ebru Okur")
>>> author1
<QuerySet [<Author: Ebru Okur>]>
>>> makale2 = Makale.objects.create(title="Djangoda E Ticaret Sitesi", author=author1, content="Djangoda E ticaret sitesi yapmak aşırı kolay.", isHome=True)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\base.py", line 543, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 284, in __set__
    raise ValueError(
ValueError: Cannot assign "<QuerySet [<Author: Ebru Okur>]>": "Makale.author" must be a "Author" instance.
>>> makale2 = Makale.objects.create(title="Djangoda E Ticaret Sitesi", author=Author.objects.filter(name="Ebru Okur"), content="Djangoda E ticaret sitesi yapmak aşırı kolay.", isHome=True)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 677, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\base.py", line 543, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 284, in __set__
    raise ValueError(
ValueError: Cannot assign "<QuerySet [<Author: Ebru Okur>]>": "Makale.author" must be a "Author" instance.
>>> author1 = Author.objects.filter(name="Ebru Okur")
>>> author1
<QuerySet [<Author: Ebru Okur>]>
>>> author1.id
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'id'
>>> author1.values()
<QuerySet [{'id': 2, 'name': 'Ebru Okur', 'slug': 'ebru-okur', 'biography': ''}]>
>>> author1.values(id) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 1360, in values
    clone = self._values(*fields, **expressions)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 1355, in _values
    clone.query.set_values(fields)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 2502, in set_values
    self.add_fields(field_names, True)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 2200, in add_fields
    name.split(LOOKUP_SEP), opts, alias, allow_many=allow_m2m
    ^^^^^^^^^^
AttributeError: 'builtin_function_or_method' object has no attribute 'split'
>>> author1.values("id") 
<QuerySet [{'id': 2}]>
>>> author1.id          
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'id'
>>> makale2 = Makale.objects.create(title="Djangoda E Ticaret Sitesi", author_id=2, content="Djangoda E ticaret sitesi yapmak aşırı kolay.", isHome=True)            
>>> makale3 = Makale.objects.create(title="Djangoda Backend", author_id=3, content="Djangoda BAckend tasarımı muazzam güzel.", isHome=True)
>>> makaleler = Makale.objects.all()
>>> makaleler
<QuerySet [<Makale: Djangonun Sırları>, <Makale: Bir Bootcamp'e Nasıl Çalışılmaz>, <Makale: MAC Dünyasında Python>, <Makale: Django Günlükleri>, <Makale: Djangoda E 
Ticaret Sitesi>, <Makale: Djangoda Backend>]>
>>> makaleEbru = Makale.objects.filter(slug="ebru-okur")
>>> makaleEbru
<QuerySet []>
>>> makaleEbru = Makale.objects.filter(author_id=2)      
>>> makaleEbru
<QuerySet [<Makale: MAC Dünyasında Python>, <Makale: Djangoda E Ticaret Sitesi>]>
>>> makaleFatih = Makale.objects.filter(author_id=1)
>>> makaleFatih
<QuerySet [<Makale: Djangonun Sırları>]>
>>> makaleDjango = Makale.objects.filter(name__contains="Django")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 1478, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 1496, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 1503, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 1613, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 1645, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 1495, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg, summarize)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 1307, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\sql\query.py", line 1772, in names_to_path
    raise FieldError(
django.core.exceptions.FieldError: Cannot resolve keyword 'name' into field. Choices are: activate, author, author_id, content, created_date, id, isHome, slug, title>>> makaleDjango = Makale.objects.filter(title__contains="Django") 
>>> makaleDjango
<QuerySet [<Makale: Djangonun Sırları>, <Makale: Django Günlükleri>, <Makale: Djangoda E Ticaret Sitesi>, <Makale: Djangoda Backend>]>
>>> makaleisHome = Makale.objects.filter(isHome=True)
>>> makaleisHome
<QuerySet [<Makale: Djangoda E Ticaret Sitesi>, <Makale: Djangoda Backend>]>
>>> author = Author.objects.get(slug="ali-dag")
>>> author
<Author: Ali Dağ>
>>> makale = Makale.objects.get(author_id=2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Techpro\Desktop\Django\day_05\practice\env\Lib\site-packages\django\db\models\query.py", line 652, in get
    raise self.model.MultipleObjectsReturned(
gazeteapp.models.Makale.MultipleObjectsReturned: get() returned more than one Makale -- it returned 2!